import { Component, OnInit, NgZone, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { BusinessLogicService } from '../../business-logic.service';
//import { MatDialog } from '@angular/material';
import { EditpopupmodalComponent } from '../../editpopupmodal/editpopupmodal.component';
import { INewimageuploadforexistingarray, IinteractiveforumsCategories,Ipollingoptions } from '../../app.interface'
import { Subscription } from 'rxjs';
import { DomSanitizer } from '@angular/platform-browser';

import { MatPaginator, MatTableDataSource, MatSort } from '@angular/material';
import {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';

import {InteractionForumsDailogComponent} from '../interaction-forums-dailog/interaction-forums-dailog.component';
@Component({
  selector: 'app-sub-category-forums',
  templateUrl: './sub-category-forums.component.html',
  styleUrls: ['./sub-category-forums.component.scss'],
  /* tslint:disable:use-host-property-decorator */
  host: { 'class': 'section main hbox space-between' }
})
export class SubCategoryForumsComponent implements OnInit, OnDestroy, AfterViewInit {
  makeInteractionScreenVisible = false;
  interactiveForumsdata: IinteractiveforumsCategories = {
    search: null,
    categoryId: null,
    pageNo: 1,
    pageSize: 10,
    employeeId: this.businesslogic.employeeId
  };
  rowcount = 0;
  show = '';
  interactiveforumdata  = [];
  timeFilterList: any;
  eventname: any;
  subscription: Subscription;
  post_object: any;
  clearSearch = false;
  constructor(private route: ActivatedRoute, private businesslogic: BusinessLogicService, private router: Router,
    public dialog: MatDialog, public nz: NgZone,private sanitizer: DomSanitizer) {
      
    
  }


  onScrollEvent(event) {
    if (event.target.scrollTop !== 0 && this.interactiveforumdata.length < this.rowcount) {
      this.interactionForums();
    }

  }

  ngOnInit() {
    this.categoryFilter();
   
    switch(this.route.snapshot.url[0].path) {
      case 'trendingallevents':
          this.eventname = 'interaction_forums/getInteractionForumsTrendingDetails'
          break;
      case 'newlyaddedallevents':
          this.eventname = 'interaction_forums/getInteractionForumsNewlyAddedDetails'
          break;
          case 'mostcommentedallevents':
          this.eventname = 'interaction_forums/getInteractionForumsMostCommentedDetails'
          break;
          
      default:
      this.eventname = 'interaction_forums/getInteractionForumsTrendingDetails'
  }
  if(this.businesslogic.employeeId == null){
    this.businesslogic.post('employee/getEmployeeDetailsWithToken',{"token":localStorage.getItem('AuthenticationToken')}).subscribe((response: any) => {
      this.businesslogic.employeeId = response[0].employeeID;
      this.interactiveforumdata = [];
      this.interactionForums();
       });
  }
  else{
    this.interactiveforumdata = [];
    this.interactionForums();
  }
 
  
    
  }

  ngAfterViewInit() {
  }

  ngOnDestroy() {
    // unsubscribe to ensure no memory leaks
   
  }

  /*Display Recently posted events*/
  interactionForums() {
    this.interactiveForumsdata.employeeId = this.businesslogic.employeeId;
    this.businesslogic.postUpdate(this.eventname, this.interactiveForumsdata).subscribe((response: any) => {
      if (response.result.length !== 0) {
        this.interactiveForumsdata.pageNo = this.interactiveForumsdata.pageNo + 1;
        this.rowcount = response.rowCount;
        this.nz.run(() => {
          if (this.interactiveforumdata.length < this.rowcount) {
            this.interactiveforumdata = this.interactiveforumdata.concat(response.result);
          } else {
            this.interactiveforumdata = response.result;
          }
        });
      } else {
        this.interactiveforumdata = response.result;
      }
    });
  }
  /*Display Recently posted events*/

  editevent(dataobject): void {
    dataobject.eventStartDate = new Date(dataobject.eventStartDate);
    dataobject.eventEndDate = new Date(dataobject.eventEndDate);

    const dialogRef = this.dialog.open(EditpopupmodalComponent, {
      width: '70%',
      data: dataobject
    });
    dialogRef.afterClosed().subscribe(result => {
      console.log('The dialog was closed');

    });
  }

  displayCompleteData(id, categoryId) {
if(this.router.url == '/intranet/forums/newlyadded/newlyaddedallevents'){
  this.router.navigate(['intranet/forums/newlyadded/individual-post', {'dataId': id, 'category_id': categoryId,'eventname': this.router.url,'redirectedFrom':'interactionForums' }]);

}
else if(this.router.url == '/intranet/forums/trending/trendingallevents'){
  this.router.navigate(['intranet/forums/trending/individual-post', {'dataId': id, 'category_id': categoryId,'eventname': this.router.url,'redirectedFrom':'interactionForums' }]);

}
else{
  this.router.navigate(['intranet/forums/mostcommented/individual-post', {'dataId': id, 'category_id': categoryId,'eventname': this.router.url,'redirectedFrom':'interactionForums' }]);

}
  }

 

  categoryFilter() {
    this.businesslogic.get('interaction_forums/getCategoryDropDown').subscribe((response: any) => {
      this.timeFilterList = response;
    });
  }

  sanitize(url: string) {
    return this.sanitizer.bypassSecurityTrustUrl(url);
  }
  
  startdiscussion(): void {
    const dialogRef = this.dialog.open(InteractionForumsDailogComponent, {
      width: '70%',
     // data: {name: this.name, animal: this.animal}
    });

    dialogRef.afterClosed().subscribe(result => {
      console.log('The dialog was closed');
      if(result!=undefined){
        this.interactiveForumsdata = {
          search: null,
      categoryId: null,
      pageNo: 1,
      pageSize: 10,
      employeeId: this.businesslogic.employeeId
        };
        this.interactiveforumdata = [];
        this.interactionForums()
      }
      
    });
  }
  dummyobject : any;

  likedTheEvent(eventid,clddata,likedstatus){
    this.dummyobject = clddata;
    this.businesslogic.post('interaction_forums/likeOrDislike', { 'interactionForumsId': eventid, "employeeId": this.businesslogic.employeeId,
    "liked": likedstatus }).subscribe((response: any) => {
      this.dummyobject.liked = response.liked;
     if(response.liked == true){
       if(this.dummyobject.dislikesCount > 0){ 
        this.dummyobject.dislikesCount = this.dummyobject.dislikesCount - 1;
       }
      this.dummyobject.likesCount = this.dummyobject.likesCount + 1;
      
     }
     else{
       if(this.dummyobject.likesCount > 0 ){
        this.dummyobject.likesCount = this.dummyobject.likesCount - 1;
       }
      
      this.dummyobject.dislikesCount = this.dummyobject.dislikesCount + 1;
     }
     this.interactiveforumdata.find(item => item.interactionForumsId == response.interactionForumsId).CLDData[0] = this.dummyobject;
         });
  }
  searchAndDurationEvents(searchdata) {
    if(searchdata==null){
      this.interactiveForumsdata.pageNo = 1;
      this.interactiveforumdata = [];
      this.interactionForums();
      this.clearSearch = true;
    }
    else{
      if(searchdata.trim().length !== 0 || searchdata === ""){
        this.interactiveForumsdata.pageNo = 1;
    this.interactiveforumdata = [];
    this.interactionForums();
    this.clearSearch = true;
      }
    }
    
    

  }

  resetFilters() {
    this.interactiveForumsdata = {
      search: null,
  categoryId: null,
  pageNo: 1,
  pageSize: 10,
  employeeId: this.businesslogic.employeeId
    };
    
    this.interactiveforumdata = [];
    this.interactionForums();
    this.clearSearch = !this.clearSearch;
  }
  gotoEmployeePage(empID) {
    this.router.navigate(['intranet/people/employee', { 'value': true, 'id': empID }]);
  }
  pollOptionSelected(event, option,eventDetails) {
    console.log('event', event);
    this.post_object = {
      optionOptedId: option.optionOptedId,
      optionId: option.optionId,
      optedBy: this.businesslogic.employeeId,
      createdBy:  this.businesslogic.employeeId,
      updatedBy:  this.businesslogic.employeeId
    };
    this.businesslogic.post('interaction_forums/savePollingOption', this.post_object).subscribe((response: any) => {
      this.businesslogic.postUpdate('interaction_forums/getInteractionForumsDataByID', { 'interactionForumsId': eventDetails.interactionForumsId, 'employeeId': this.businesslogic.employeeId, 'categoryId': eventDetails.categoryId }).subscribe((response: any) => {
        console.log(response);
        this.interactiveforumdata.map((item, i) => {
          if (item.interactionForumsId == response[0].interactionForumsId){
             this.interactiveforumdata[i].pollingData =  response[0].pollingData;
             this.interactiveforumdata[i].totalPollingCount = response[0].totalPollingCount;

           }
         });
        // this.interactiveforumdata.find(item => item.interactionForumsId == response[0].interactionForumsId).pollingData =  response[0].pollingData;
      });
      
    });
  }
}


export interface IYesNo {
  name: string;
  time: Date;
  designation: string;
  location: string;
  pollresponse: string;

}

