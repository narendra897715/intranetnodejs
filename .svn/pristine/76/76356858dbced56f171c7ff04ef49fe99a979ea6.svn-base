import {
    HttpEvent,
    HttpInterceptor,
    HttpHandler,
    HttpRequest,
    HttpResponse
  } from '@angular/common/http';
  import {Injectable} from '@angular/core';
  import { Observable } from 'rxjs';
  import {BusinessLogicService} from './business-logic.service';
  import { tap } from 'rxjs/operators';
  @Injectable()
  export class AddHeaderInterceptor implements HttpInterceptor {
    constructor(public businesslogin:BusinessLogicService) { }
    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {
        this.businesslogin.loadingImageChange(true);
     
      const reqHeader = req.clone({headers: req.headers.set('Authorization', 'MyAuthToken')});
  
     
      return next.handle(reqHeader).pipe(
        tap(resp => {
          if (resp instanceof HttpResponse) {
        
            this.businesslogin.loadingImageChange(false);
          
          }
        }, error => {
            this.businesslogin.loadingImageChange(false);
         
        })
      );
    }
  }